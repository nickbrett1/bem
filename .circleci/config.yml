# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "Say hello"
          command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  say-hello-workflow:
    jobs:
      - say-hello
=======
version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.0

jobs:
  build:
    docker:
      - image: cimg/node:18.8.0-browsers
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - checkout
      - restore_cache:
          name: Restore node_modules cache
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v3-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
            - node-v3-{{ .Branch }}-
            - node-v3-
      - run:
          name: Install modules
          command: |
            cd webapp && npm install
      - save_cache:
          name: Update node_modules cache
          paths:
            - webapp/node_modules
          key: node-v3-{{ .Branch }}-{{ checksum "webapp/package-lock.json" }}
      - run:
          name: Build app
          command: |
            cd webapp && npm run build
      - run:
          name: Check processing time limit
          command: |
            cd webapp && npx size-limit
      - run:
          name: Run Lighthouse checks
          command: |
            cd webapp && sudo npm install -g @lhci/cli@0.9.x && lhci autorun
      - run:
          name: Deploying to Cloudflare
          command: cd webapp && npx wrangler pages publish assets/webpack_bundles --project-name=bem
